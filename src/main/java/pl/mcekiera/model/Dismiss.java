package pl.mcekiera.model;

import javax.persistence.*;

/**
 * Represents user request to dismiss given movie recommendation.
 */
@Table(uniqueConstraints = @UniqueConstraint(columnNames = { "imdbId","profileId"}))
@Entity
public class Dismiss {
    /**
     * id of given object, auto generated by Hibernate
     */
    @Id
    @GeneratedValue(strategy= GenerationType.IDENTITY)
    private long id;
    /**
     * Id of Movie object
     */
    private String imdbId;
    /**
     * Id of profile object
     */
    private String profileId;

    public Dismiss(){}

    public Dismiss(String profileId, String movieId) {
        this.profileId = profileId;
        this.imdbId = movieId;

    }

    /**
     * @return id of given object
     */
    public long getId() {
        return id;
    }

    /**
     * Only for Hibernate
     * @param id value
     */
    private void setId(long id) {
        this.id = id;
    }

    /**
     * @return id of Movie the dismiss request concerns
     */
    @Basic
    @Column(name = "imdbId")
    public String getImdbId() {
        return imdbId;
    }

    /**
     * Only for Hibernate
     * @param imdbId value
     */
    private void setImdbId(String imdbId) {
        this.imdbId = imdbId;
    }

    /**
     * @return id of Profile from which dismiss request was sent
     */
    @Basic
    @Column(name = "profileId")
    public String getProfileId() {
        return profileId;
    }

    /**
     * Only for Hibernate
     * @param profileId value
     */
    private void setProfileId(String profileId) {
        this.profileId = profileId;
    }

    /**
     * @return String in format: Dismissed: $prifileId-$imdbId
     */
    @Override
    public String toString() {
        return "Dissmissed: " + profileId + "-" + imdbId;
    }

    /**
     * Determine if both object are equals. In comparison uses all fields.
     * @param o object to compare
     * @return true if object are equal
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Dismiss dismiss = (Dismiss) o;

        if (getId() != dismiss.getId()) return false;
        if (!getImdbId().equals(dismiss.getImdbId())) return false;
        return getProfileId().equals(dismiss.getProfileId());

    }

    /**
     * @return hashcode, generated with use of all fields
     */
    @Override
    public int hashCode() {
        int result = (int) (getId() ^ (getId() >>> 32));
        result = 31 * result + getImdbId().hashCode();
        result = 31 * result + getProfileId().hashCode();
        return result;
    }
}
